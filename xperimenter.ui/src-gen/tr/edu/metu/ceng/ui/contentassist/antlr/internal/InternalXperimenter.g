/*
* generated by Xtext
*/
grammar InternalXperimenter;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package tr.edu.metu.ceng.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package tr.edu.metu.ceng.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import tr.edu.metu.ceng.services.XperimenterGrammarAccess;

}

@parser::members {
 
 	private XperimenterGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(XperimenterGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getElementsAssignment()); }
(rule__Model__ElementsAssignment)*
{ after(grammarAccess.getModelAccess().getElementsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExperiment
entryRuleExperiment 
:
{ before(grammarAccess.getExperimentRule()); }
	 ruleExperiment
{ after(grammarAccess.getExperimentRule()); } 
	 EOF 
;

// Rule Experiment
ruleExperiment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExperimentAccess().getGroup()); }
(rule__Experiment__Group__0)
{ after(grammarAccess.getExperimentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDesign
entryRuleDesign 
:
{ before(grammarAccess.getDesignRule()); }
	 ruleDesign
{ after(grammarAccess.getDesignRule()); } 
	 EOF 
;

// Rule Design
ruleDesign
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDesignAccess().getGroup()); }
(rule__Design__Group__0)
{ after(grammarAccess.getDesignAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimulation
entryRuleSimulation 
:
{ before(grammarAccess.getSimulationRule()); }
	 ruleSimulation
{ after(grammarAccess.getSimulationRule()); } 
	 EOF 
;

// Rule Simulation
ruleSimulation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimulationAccess().getGroup()); }
(rule__Simulation__Group__0)
{ after(grammarAccess.getSimulationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatAnalysis
entryRuleStatAnalysis 
:
{ before(grammarAccess.getStatAnalysisRule()); }
	 ruleStatAnalysis
{ after(grammarAccess.getStatAnalysisRule()); } 
	 EOF 
;

// Rule StatAnalysis
ruleStatAnalysis
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatAnalysisAccess().getGroup()); }
(rule__StatAnalysis__Group__0)
{ after(grammarAccess.getStatAnalysisAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePort
entryRulePort 
:
{ before(grammarAccess.getPortRule()); }
	 rulePort
{ after(grammarAccess.getPortRule()); } 
	 EOF 
;

// Rule Port
rulePort
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPortAccess().getAlternatives()); }
(rule__Port__Alternatives)
{ after(grammarAccess.getPortAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInPort
entryRuleInPort 
:
{ before(grammarAccess.getInPortRule()); }
	 ruleInPort
{ after(grammarAccess.getInPortRule()); } 
	 EOF 
;

// Rule InPort
ruleInPort
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInPortAccess().getGroup()); }
(rule__InPort__Group__0)
{ after(grammarAccess.getInPortAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOutPort
entryRuleOutPort 
:
{ before(grammarAccess.getOutPortRule()); }
	 ruleOutPort
{ after(grammarAccess.getOutPortRule()); } 
	 EOF 
;

// Rule OutPort
ruleOutPort
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOutPortAccess().getGroup()); }
(rule__OutPort__Group__0)
{ after(grammarAccess.getOutPortAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getGroup()); }
(rule__Variable__Group__0)
{ after(grammarAccess.getVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}






// Rule Objective
ruleObjective
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectiveAccess().getAlternatives()); }
(rule__Objective__Alternatives)
{ after(grammarAccess.getObjectiveAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule SimModelType
ruleSimModelType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimModelTypeAccess().getAlternatives()); }
(rule__SimModelType__Alternatives)
{ after(grammarAccess.getSimModelTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule VariableGroup
ruleVariableGroup
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableGroupAccess().getAlternatives()); }
(rule__VariableGroup__Alternatives)
{ after(grammarAccess.getVariableGroupAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule VariableType
ruleVariableType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableTypeAccess().getAlternatives()); }
(rule__VariableType__Alternatives)
{ after(grammarAccess.getVariableTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule SamplingMethod
ruleSamplingMethod
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSamplingMethodAccess().getAlternatives()); }
(rule__SamplingMethod__Alternatives)
{ after(grammarAccess.getSamplingMethodAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Rule VisualizationType
ruleVisualizationType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisualizationTypeAccess().getAlternatives()); }
(rule__VisualizationType__Alternatives)
{ after(grammarAccess.getVisualizationTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getExperimentParserRuleCall_0()); }
	ruleExperiment
{ after(grammarAccess.getTypeAccess().getExperimentParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getDesignParserRuleCall_1()); }
	ruleDesign
{ after(grammarAccess.getTypeAccess().getDesignParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getStatAnalysisParserRuleCall_2()); }
	ruleStatAnalysis
{ after(grammarAccess.getTypeAccess().getStatAnalysisParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getSimulationParserRuleCall_3()); }
	ruleSimulation
{ after(grammarAccess.getTypeAccess().getSimulationParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getVariableParserRuleCall_4()); }
	ruleVariable
{ after(grammarAccess.getTypeAccess().getVariableParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAccess().getInPortParserRuleCall_0()); }
	ruleInPort
{ after(grammarAccess.getPortAccess().getInPortParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPortAccess().getOutPortParserRuleCall_1()); }
	ruleOutPort
{ after(grammarAccess.getPortAccess().getOutPortParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Objective__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectiveAccess().getCOMPARATIVEEnumLiteralDeclaration_0()); }
(	'COMPARATIVE' 
)
{ after(grammarAccess.getObjectiveAccess().getCOMPARATIVEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getObjectiveAccess().getSCREENINGEnumLiteralDeclaration_1()); }
(	'SCREENING' 
)
{ after(grammarAccess.getObjectiveAccess().getSCREENINGEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getObjectiveAccess().getRESPSURFACEEnumLiteralDeclaration_2()); }
(	'RESPSURFACE' 
)
{ after(grammarAccess.getObjectiveAccess().getRESPSURFACEEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimModelType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimModelTypeAccess().getSTATICEnumLiteralDeclaration_0()); }
(	'STATIC' 
)
{ after(grammarAccess.getSimModelTypeAccess().getSTATICEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getSimModelTypeAccess().getCONTINUOUSEnumLiteralDeclaration_1()); }
(	'CONTINUOUS' 
)
{ after(grammarAccess.getSimModelTypeAccess().getCONTINUOUSEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getSimModelTypeAccess().getDISCRETEEVENTEnumLiteralDeclaration_2()); }
(	'DISCRETEEVENT' 
)
{ after(grammarAccess.getSimModelTypeAccess().getDISCRETEEVENTEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableGroup__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableGroupAccess().getFACTOREnumLiteralDeclaration_0()); }
(	'FACTOR' 
)
{ after(grammarAccess.getVariableGroupAccess().getFACTOREnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getVariableGroupAccess().getRESPONSEEnumLiteralDeclaration_1()); }
(	'RESPONSE' 
)
{ after(grammarAccess.getVariableGroupAccess().getRESPONSEEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableTypeAccess().getBOOLEANEnumLiteralDeclaration_0()); }
(	'BOOLEAN' 
)
{ after(grammarAccess.getVariableTypeAccess().getBOOLEANEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getVariableTypeAccess().getINTEGEREnumLiteralDeclaration_1()); }
(	'INTEGER' 
)
{ after(grammarAccess.getVariableTypeAccess().getINTEGEREnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getVariableTypeAccess().getFLOATEnumLiteralDeclaration_2()); }
(	'FLOAT' 
)
{ after(grammarAccess.getVariableTypeAccess().getFLOATEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getVariableTypeAccess().getSTRINGEnumLiteralDeclaration_3()); }
(	'STRING' 
)
{ after(grammarAccess.getVariableTypeAccess().getSTRINGEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SamplingMethod__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSamplingMethodAccess().getRANDOMIZEDEnumLiteralDeclaration_0()); }
(	'RANDOMIZED' 
)
{ after(grammarAccess.getSamplingMethodAccess().getRANDOMIZEDEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getSamplingMethodAccess().getRANDOMIZEDBLOCKEnumLiteralDeclaration_1()); }
(	'RANDOMIZEDBLOCK' 
)
{ after(grammarAccess.getSamplingMethodAccess().getRANDOMIZEDBLOCKEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getSamplingMethodAccess().getFACTORIALEnumLiteralDeclaration_2()); }
(	'FACTORIAL' 
)
{ after(grammarAccess.getSamplingMethodAccess().getFACTORIALEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getSamplingMethodAccess().getFRACFACTORIALEnumLiteralDeclaration_3()); }
(	'FRACFACTORIAL' 
)
{ after(grammarAccess.getSamplingMethodAccess().getFRACFACTORIALEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getSamplingMethodAccess().getCENTRALCOMPEnumLiteralDeclaration_4()); }
(	'CENTRALCOMP' 
)
{ after(grammarAccess.getSamplingMethodAccess().getCENTRALCOMPEnumLiteralDeclaration_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VisualizationType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisualizationTypeAccess().getHISTOGRAMEnumLiteralDeclaration_0()); }
(	'HISTOGRAM' 
)
{ after(grammarAccess.getVisualizationTypeAccess().getHISTOGRAMEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getVisualizationTypeAccess().getSCATTERPLOTEnumLiteralDeclaration_1()); }
(	'SCATTERPLOT' 
)
{ after(grammarAccess.getVisualizationTypeAccess().getSCATTERPLOTEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Experiment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Experiment__Group__0__Impl
	rule__Experiment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getExperimentKeyword_0()); }

	'experiment' 

{ after(grammarAccess.getExperimentAccess().getExperimentKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Experiment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Experiment__Group__1__Impl
	rule__Experiment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getNameAssignment_1()); }
(rule__Experiment__NameAssignment_1)
{ after(grammarAccess.getExperimentAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Experiment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Experiment__Group__2__Impl
	rule__Experiment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getExperimentAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Experiment__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Experiment__Group__3__Impl
	rule__Experiment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getGroup_3()); }
(rule__Experiment__Group_3__0)?
{ after(grammarAccess.getExperimentAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Experiment__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Experiment__Group__4__Impl
	rule__Experiment__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getObjectiveKeyword_4()); }

	'objective' 

{ after(grammarAccess.getExperimentAccess().getObjectiveKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Experiment__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Experiment__Group__5__Impl
	rule__Experiment__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getObjectiveAssignment_5()); }
(rule__Experiment__ObjectiveAssignment_5)
{ after(grammarAccess.getExperimentAccess().getObjectiveAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Experiment__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Experiment__Group__6__Impl
	rule__Experiment__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getExperimentAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Experiment__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Experiment__Group__7__Impl
	rule__Experiment__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getDesignKeyword_7()); }

	'design' 

{ after(grammarAccess.getExperimentAccess().getDesignKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Experiment__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Experiment__Group__8__Impl
	rule__Experiment__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getDesignAssignment_8()); }
(rule__Experiment__DesignAssignment_8)
{ after(grammarAccess.getExperimentAccess().getDesignAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Experiment__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Experiment__Group__9__Impl
	rule__Experiment__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getSemicolonKeyword_9()); }

	';' 

{ after(grammarAccess.getExperimentAccess().getSemicolonKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Experiment__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Experiment__Group__10__Impl
	rule__Experiment__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getSimulationKeyword_10()); }

	'simulation' 

{ after(grammarAccess.getExperimentAccess().getSimulationKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Experiment__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Experiment__Group__11__Impl
	rule__Experiment__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getSimulationAssignment_11()); }
(rule__Experiment__SimulationAssignment_11)
{ after(grammarAccess.getExperimentAccess().getSimulationAssignment_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Experiment__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Experiment__Group__12__Impl
	rule__Experiment__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getSemicolonKeyword_12()); }

	';' 

{ after(grammarAccess.getExperimentAccess().getSemicolonKeyword_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Experiment__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Experiment__Group__13__Impl
	rule__Experiment__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getAnalysisKeyword_13()); }

	'analysis' 

{ after(grammarAccess.getExperimentAccess().getAnalysisKeyword_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Experiment__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Experiment__Group__14__Impl
	rule__Experiment__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getAnalysisAssignment_14()); }
(rule__Experiment__AnalysisAssignment_14)
{ after(grammarAccess.getExperimentAccess().getAnalysisAssignment_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Experiment__Group__15
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Experiment__Group__15__Impl
	rule__Experiment__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__15__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getSemicolonKeyword_15()); }

	';' 

{ after(grammarAccess.getExperimentAccess().getSemicolonKeyword_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Experiment__Group__16
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Experiment__Group__16__Impl
	rule__Experiment__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__16__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getVisualKeyword_16()); }

	'visual' 

{ after(grammarAccess.getExperimentAccess().getVisualKeyword_16()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Experiment__Group__17
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Experiment__Group__17__Impl
	rule__Experiment__Group__18
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__17__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getVisualizationAssignment_17()); }
(rule__Experiment__VisualizationAssignment_17)
{ after(grammarAccess.getExperimentAccess().getVisualizationAssignment_17()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Experiment__Group__18
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Experiment__Group__18__Impl
	rule__Experiment__Group__19
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__18__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getSemicolonKeyword_18()); }

	';' 

{ after(grammarAccess.getExperimentAccess().getSemicolonKeyword_18()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Experiment__Group__19
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Experiment__Group__19__Impl
	rule__Experiment__Group__20
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__19__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getGroup_19()); }
(rule__Experiment__Group_19__0)?
{ after(grammarAccess.getExperimentAccess().getGroup_19()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Experiment__Group__20
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Experiment__Group__20__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group__20__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getRightCurlyBracketKeyword_20()); }

	'}' 

{ after(grammarAccess.getExperimentAccess().getRightCurlyBracketKeyword_20()); }
)

;
finally {
	restoreStackSize(stackSize);
}












































rule__Experiment__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Experiment__Group_3__0__Impl
	rule__Experiment__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getDescKeyword_3_0()); }

	'desc' 

{ after(grammarAccess.getExperimentAccess().getDescKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Experiment__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Experiment__Group_3__1__Impl
	rule__Experiment__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getDescriptionAssignment_3_1()); }
(rule__Experiment__DescriptionAssignment_3_1)
{ after(grammarAccess.getExperimentAccess().getDescriptionAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Experiment__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Experiment__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getSemicolonKeyword_3_2()); }

	';' 

{ after(grammarAccess.getExperimentAccess().getSemicolonKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Experiment__Group_19__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Experiment__Group_19__0__Impl
	rule__Experiment__Group_19__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group_19__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getTimeoutKeyword_19_0()); }

	'timeout' 

{ after(grammarAccess.getExperimentAccess().getTimeoutKeyword_19_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Experiment__Group_19__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Experiment__Group_19__1__Impl
	rule__Experiment__Group_19__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group_19__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getTimeoutAssignment_19_1()); }
(rule__Experiment__TimeoutAssignment_19_1)
{ after(grammarAccess.getExperimentAccess().getTimeoutAssignment_19_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Experiment__Group_19__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Experiment__Group_19__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__Group_19__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getSemicolonKeyword_19_2()); }

	';' 

{ after(grammarAccess.getExperimentAccess().getSemicolonKeyword_19_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Design__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Design__Group__0__Impl
	rule__Design__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Design__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getDesignKeyword_0()); }

	'design' 

{ after(grammarAccess.getDesignAccess().getDesignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Design__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Design__Group__1__Impl
	rule__Design__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Design__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getNameAssignment_1()); }
(rule__Design__NameAssignment_1)
{ after(grammarAccess.getDesignAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Design__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Design__Group__2__Impl
	rule__Design__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Design__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getDesignAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Design__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Design__Group__3__Impl
	rule__Design__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Design__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getMethodKeyword_3()); }

	'method' 

{ after(grammarAccess.getDesignAccess().getMethodKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Design__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Design__Group__4__Impl
	rule__Design__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Design__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getMethodAssignment_4()); }
(rule__Design__MethodAssignment_4)
{ after(grammarAccess.getDesignAccess().getMethodAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Design__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Design__Group__5__Impl
	rule__Design__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Design__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getDesignAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Design__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Design__Group__6__Impl
	rule__Design__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Design__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getVarlistKeyword_6()); }

	'varlist' 

{ after(grammarAccess.getDesignAccess().getVarlistKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Design__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Design__Group__7__Impl
	rule__Design__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Design__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getVariablesAssignment_7()); }
(rule__Design__VariablesAssignment_7)*
{ after(grammarAccess.getDesignAccess().getVariablesAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Design__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Design__Group__8__Impl
	rule__Design__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Design__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getSemicolonKeyword_8()); }

	';' 

{ after(grammarAccess.getDesignAccess().getSemicolonKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Design__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Design__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Design__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getRightCurlyBracketKeyword_9()); }

	'}' 

{ after(grammarAccess.getDesignAccess().getRightCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Simulation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simulation__Group__0__Impl
	rule__Simulation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimulationAccess().getSimulationKeyword_0()); }

	'simulation' 

{ after(grammarAccess.getSimulationAccess().getSimulationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simulation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simulation__Group__1__Impl
	rule__Simulation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimulationAccess().getNameAssignment_1()); }
(rule__Simulation__NameAssignment_1)
{ after(grammarAccess.getSimulationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simulation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simulation__Group__2__Impl
	rule__Simulation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimulationAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getSimulationAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simulation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simulation__Group__3__Impl
	rule__Simulation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimulationAccess().getModelFileKeyword_3()); }

	'modelFile' 

{ after(grammarAccess.getSimulationAccess().getModelFileKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simulation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simulation__Group__4__Impl
	rule__Simulation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimulationAccess().getModelFilePathAssignment_4()); }
(rule__Simulation__ModelFilePathAssignment_4)
{ after(grammarAccess.getSimulationAccess().getModelFilePathAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simulation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simulation__Group__5__Impl
	rule__Simulation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimulationAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getSimulationAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simulation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simulation__Group__6__Impl
	rule__Simulation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimulationAccess().getGroup_6()); }
(rule__Simulation__Group_6__0)
{ after(grammarAccess.getSimulationAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simulation__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simulation__Group__7__Impl
	rule__Simulation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulation__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimulationAccess().getPortsAssignment_7()); }
(rule__Simulation__PortsAssignment_7)*
{ after(grammarAccess.getSimulationAccess().getPortsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simulation__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simulation__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulation__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimulationAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getSimulationAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Simulation__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simulation__Group_6__0__Impl
	rule__Simulation__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulation__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimulationAccess().getModelTypeKeyword_6_0()); }

	'modelType' 

{ after(grammarAccess.getSimulationAccess().getModelTypeKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simulation__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simulation__Group_6__1__Impl
	rule__Simulation__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulation__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimulationAccess().getModelTypeAssignment_6_1()); }
(rule__Simulation__ModelTypeAssignment_6_1)
{ after(grammarAccess.getSimulationAccess().getModelTypeAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simulation__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simulation__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulation__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimulationAccess().getSemicolonKeyword_6_2()); }

	';' 

{ after(grammarAccess.getSimulationAccess().getSemicolonKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StatAnalysis__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatAnalysis__Group__0__Impl
	rule__StatAnalysis__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatAnalysis__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatAnalysisAccess().getStatAnalysisKeyword_0()); }

	'statAnalysis' 

{ after(grammarAccess.getStatAnalysisAccess().getStatAnalysisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatAnalysis__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatAnalysis__Group__1__Impl
	rule__StatAnalysis__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatAnalysis__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatAnalysisAccess().getNameAssignment_1()); }
(rule__StatAnalysis__NameAssignment_1)
{ after(grammarAccess.getStatAnalysisAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatAnalysis__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatAnalysis__Group__2__Impl
	rule__StatAnalysis__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StatAnalysis__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatAnalysisAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getStatAnalysisAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatAnalysis__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatAnalysis__Group__3__Impl
	rule__StatAnalysis__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StatAnalysis__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatAnalysisAccess().getServiceKeyword_3()); }

	'service' 

{ after(grammarAccess.getStatAnalysisAccess().getServiceKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatAnalysis__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatAnalysis__Group__4__Impl
	rule__StatAnalysis__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StatAnalysis__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatAnalysisAccess().getUriAssignment_4()); }
(rule__StatAnalysis__UriAssignment_4)
{ after(grammarAccess.getStatAnalysisAccess().getUriAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatAnalysis__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatAnalysis__Group__5__Impl
	rule__StatAnalysis__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StatAnalysis__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatAnalysisAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getStatAnalysisAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatAnalysis__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatAnalysis__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatAnalysis__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatAnalysisAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getStatAnalysisAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__InPort__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InPort__Group__0__Impl
	rule__InPort__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InPort__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInPortAccess().getInportKeyword_0()); }

	'inport' 

{ after(grammarAccess.getInPortAccess().getInportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InPort__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InPort__Group__1__Impl
	rule__InPort__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InPort__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInPortAccess().getNameAssignment_1()); }
(rule__InPort__NameAssignment_1)
{ after(grammarAccess.getInPortAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InPort__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InPort__Group__2__Impl
	rule__InPort__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InPort__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInPortAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getInPortAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InPort__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InPort__Group__3__Impl
	rule__InPort__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InPort__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInPortAccess().getVariableAssignment_3()); }
(rule__InPort__VariableAssignment_3)
{ after(grammarAccess.getInPortAccess().getVariableAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InPort__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InPort__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InPort__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInPortAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getInPortAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__OutPort__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutPort__Group__0__Impl
	rule__OutPort__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutPort__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutPortAccess().getOutportKeyword_0()); }

	'outport' 

{ after(grammarAccess.getOutPortAccess().getOutportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutPort__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutPort__Group__1__Impl
	rule__OutPort__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutPort__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutPortAccess().getNameAssignment_1()); }
(rule__OutPort__NameAssignment_1)
{ after(grammarAccess.getOutPortAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutPort__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutPort__Group__2__Impl
	rule__OutPort__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OutPort__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutPortAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getOutPortAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutPort__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutPort__Group__3__Impl
	rule__OutPort__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OutPort__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutPortAccess().getVariableAssignment_3()); }
(rule__OutPort__VariableAssignment_3)
{ after(grammarAccess.getOutPortAccess().getVariableAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutPort__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutPort__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutPort__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutPortAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getOutPortAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Variable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getVariableKeyword_0()); }

	'variable' 

{ after(grammarAccess.getVariableAccess().getVariableKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__1__Impl
	rule__Variable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameAssignment_1()); }
(rule__Variable__NameAssignment_1)
{ after(grammarAccess.getVariableAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__2__Impl
	rule__Variable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getVariableAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__3__Impl
	rule__Variable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getTypeAssignment_3()); }
(rule__Variable__TypeAssignment_3)
{ after(grammarAccess.getVariableAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__4__Impl
	rule__Variable__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getGroupKeyword_4()); }

	'group' 

{ after(grammarAccess.getVariableAccess().getGroupKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__5__Impl
	rule__Variable__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getGroupAssignment_5()); }
(rule__Variable__GroupAssignment_5)
{ after(grammarAccess.getVariableAccess().getGroupAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__6__Impl
	rule__Variable__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getGroup_6()); }
(rule__Variable__Group_6__0)?
{ after(grammarAccess.getVariableAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__7__Impl
	rule__Variable__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getGroup_7()); }
(rule__Variable__Group_7__0)?
{ after(grammarAccess.getVariableAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getSemicolonKeyword_8()); }

	';' 

{ after(grammarAccess.getVariableAccess().getSemicolonKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Variable__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_6__0__Impl
	rule__Variable__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getLeftSquareBracketKeyword_6_0()); }

	'[' 

{ after(grammarAccess.getVariableAccess().getLeftSquareBracketKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_6__1__Impl
	rule__Variable__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getLowValueAssignment_6_1()); }
(rule__Variable__LowValueAssignment_6_1)
{ after(grammarAccess.getVariableAccess().getLowValueAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_6__2__Impl
	rule__Variable__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getCommaKeyword_6_2()); }

	',' 

{ after(grammarAccess.getVariableAccess().getCommaKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_6__3__Impl
	rule__Variable__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getHighValueAssignment_6_3()); }
(rule__Variable__HighValueAssignment_6_3)
{ after(grammarAccess.getVariableAccess().getHighValueAssignment_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_6__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_6__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_6__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getRightSquareBracketKeyword_6_4()); }

	']' 

{ after(grammarAccess.getVariableAccess().getRightSquareBracketKeyword_6_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Variable__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_7__0__Impl
	rule__Variable__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getGenKeyword_7_0()); }

	'gen' 

{ after(grammarAccess.getVariableAccess().getGenKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getGeneratorAssignment_7_1()); }
(rule__Variable__GeneratorAssignment_7_1)
{ after(grammarAccess.getVariableAccess().getGeneratorAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Model__ElementsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getElementsTypeParserRuleCall_0()); }
	ruleType{ after(grammarAccess.getModelAccess().getElementsTypeParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getExperimentAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__DescriptionAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getDescriptionSTRINGTerminalRuleCall_3_1_0()); }
	RULE_STRING{ after(grammarAccess.getExperimentAccess().getDescriptionSTRINGTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__ObjectiveAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getObjectiveObjectiveEnumRuleCall_5_0()); }
	ruleObjective{ after(grammarAccess.getExperimentAccess().getObjectiveObjectiveEnumRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__DesignAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getDesignDesignCrossReference_8_0()); }
(
{ before(grammarAccess.getExperimentAccess().getDesignDesignIDTerminalRuleCall_8_0_1()); }
	RULE_ID{ after(grammarAccess.getExperimentAccess().getDesignDesignIDTerminalRuleCall_8_0_1()); }
)
{ after(grammarAccess.getExperimentAccess().getDesignDesignCrossReference_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__SimulationAssignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getSimulationSimulationCrossReference_11_0()); }
(
{ before(grammarAccess.getExperimentAccess().getSimulationSimulationIDTerminalRuleCall_11_0_1()); }
	RULE_ID{ after(grammarAccess.getExperimentAccess().getSimulationSimulationIDTerminalRuleCall_11_0_1()); }
)
{ after(grammarAccess.getExperimentAccess().getSimulationSimulationCrossReference_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__AnalysisAssignment_14
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getAnalysisStatAnalysisCrossReference_14_0()); }
(
{ before(grammarAccess.getExperimentAccess().getAnalysisStatAnalysisIDTerminalRuleCall_14_0_1()); }
	RULE_ID{ after(grammarAccess.getExperimentAccess().getAnalysisStatAnalysisIDTerminalRuleCall_14_0_1()); }
)
{ after(grammarAccess.getExperimentAccess().getAnalysisStatAnalysisCrossReference_14_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__VisualizationAssignment_17
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getVisualizationVisualizationTypeEnumRuleCall_17_0()); }
	ruleVisualizationType{ after(grammarAccess.getExperimentAccess().getVisualizationVisualizationTypeEnumRuleCall_17_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Experiment__TimeoutAssignment_19_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExperimentAccess().getTimeoutINTTerminalRuleCall_19_1_0()); }
	RULE_INT{ after(grammarAccess.getExperimentAccess().getTimeoutINTTerminalRuleCall_19_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Design__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDesignAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Design__MethodAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getMethodSamplingMethodEnumRuleCall_4_0()); }
	ruleSamplingMethod{ after(grammarAccess.getDesignAccess().getMethodSamplingMethodEnumRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Design__VariablesAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDesignAccess().getVariablesVariableCrossReference_7_0()); }
(
{ before(grammarAccess.getDesignAccess().getVariablesVariableIDTerminalRuleCall_7_0_1()); }
	RULE_ID{ after(grammarAccess.getDesignAccess().getVariablesVariableIDTerminalRuleCall_7_0_1()); }
)
{ after(grammarAccess.getDesignAccess().getVariablesVariableCrossReference_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simulation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimulationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSimulationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simulation__ModelFilePathAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimulationAccess().getModelFilePathSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getSimulationAccess().getModelFilePathSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simulation__ModelTypeAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimulationAccess().getModelTypeSimModelTypeEnumRuleCall_6_1_0()); }
	ruleSimModelType{ after(grammarAccess.getSimulationAccess().getModelTypeSimModelTypeEnumRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simulation__PortsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimulationAccess().getPortsPortParserRuleCall_7_0()); }
	rulePort{ after(grammarAccess.getSimulationAccess().getPortsPortParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatAnalysis__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatAnalysisAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStatAnalysisAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatAnalysis__UriAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatAnalysisAccess().getUriSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getStatAnalysisAccess().getUriSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InPort__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInPortAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getInPortAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InPort__VariableAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInPortAccess().getVariableVariableCrossReference_3_0()); }
(
{ before(grammarAccess.getInPortAccess().getVariableVariableIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getInPortAccess().getVariableVariableIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getInPortAccess().getVariableVariableCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutPort__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutPortAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getOutPortAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutPort__VariableAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutPortAccess().getVariableVariableCrossReference_3_0()); }
(
{ before(grammarAccess.getOutPortAccess().getVariableVariableIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getOutPortAccess().getVariableVariableIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getOutPortAccess().getVariableVariableCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getTypeVariableTypeEnumRuleCall_3_0()); }
	ruleVariableType{ after(grammarAccess.getVariableAccess().getTypeVariableTypeEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__GroupAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getGroupVariableGroupEnumRuleCall_5_0()); }
	ruleVariableGroup{ after(grammarAccess.getVariableAccess().getGroupVariableGroupEnumRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__LowValueAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getLowValueINTTerminalRuleCall_6_1_0()); }
	RULE_INT{ after(grammarAccess.getVariableAccess().getLowValueINTTerminalRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__HighValueAssignment_6_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getHighValueINTTerminalRuleCall_6_3_0()); }
	RULE_INT{ after(grammarAccess.getVariableAccess().getHighValueINTTerminalRuleCall_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__GeneratorAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getGeneratorNumberGeneratorCrossReference_7_1_0()); }
(
{ before(grammarAccess.getVariableAccess().getGeneratorNumberGeneratorIDTerminalRuleCall_7_1_0_1()); }
	RULE_ID{ after(grammarAccess.getVariableAccess().getGeneratorNumberGeneratorIDTerminalRuleCall_7_1_0_1()); }
)
{ after(grammarAccess.getVariableAccess().getGeneratorNumberGeneratorCrossReference_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


